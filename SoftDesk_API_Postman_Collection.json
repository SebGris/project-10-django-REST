{
  "info": {
    "name": "SoftDesk API - Tests Complets",
    "description": "Collection compl√®te pour tester tous les endpoints de l'API SoftDesk",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "api_url",
      "value": "{{base_url}}/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "project_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Obtenir Token JWT",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.access);",
                  "    pm.environment.set('refresh_token', response.refresh);",
                  "    pm.test('Token obtenu avec succ√®s', () => {",
                  "        pm.expect(response.access).to.exist;",
                  "    });",
                  "} else {",
                  "    pm.test('Erreur d\\'authentification', () => {",
                  "        pm.expect.fail('V√©rifiez vos identifiants');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"SoftDesk2025!\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/token/",
              "host": ["{{api_url}}"],
              "path": ["token", ""]
            }
          }
        },
        {
          "name": "Rafra√Æchir Token",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/token/refresh/",
              "host": ["{{api_url}}"],
              "path": ["token", "refresh", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Users",
      "item": [
        {
          "name": "Inscription (Public)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('user_id', response.id);",
                  "    pm.test('Utilisateur cr√©√© avec succ√®s', () => {",
                  "        pm.expect(response.username).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"john_doe_{{$timestamp}}\",\n    \"email\": \"john@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"age\": 25,\n    \"can_be_contacted\": true,\n    \"can_data_be_shared\": false,\n    \"password\": \"SecurePass123!\",\n    \"password_confirm\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/users/",
              "host": ["{{api_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "Liste des Utilisateurs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users/",
              "host": ["{{api_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "Profil Personnel (GET)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users/profile/",
              "host": ["{{api_url}}"],
              "path": ["users", "profile", ""]
            }
          }
        },
        {
          "name": "Modifier Profil (PATCH)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"can_be_contacted\": false,\n    \"age\": 30\n}"
            },
            "url": {
              "raw": "{{api_url}}/users/profile/",
              "host": ["{{api_url}}"],
              "path": ["users", "profile", ""]
            }
          }
        },
        {
          "name": "D√©tails Utilisateur",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users/{{user_id}}/",
              "host": ["{{api_url}}"],
              "path": ["users", "{{user_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üìã Projects",
      "item": [
        {
          "name": "Cr√©er Projet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('project_id', response.id);",
                  "    pm.test('Projet cr√©√© avec succ√®s', () => {",
                  "        pm.expect(response.name).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Projet Test {{$timestamp}}\",\n    \"description\": \"Description d√©taill√©e du projet de test\",\n    \"type\": \"back-end\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/projects/",
              "host": ["{{api_url}}"],
              "path": ["projects", ""]
            }
          }
        },
        {
          "name": "Liste des Projets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/projects/",
              "host": ["{{api_url}}"],
              "path": ["projects", ""]
            }
          }
        },
        {
          "name": "D√©tails Projet",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/projects/{{project_id}}/",
              "host": ["{{api_url}}"],
              "path": ["projects", "{{project_id}}", ""]
            }
          }
        },
        {
          "name": "Modifier Projet",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Projet Modifi√©\",\n    \"description\": \"Description mise √† jour du projet\",\n    \"type\": \"front-end\"\n}"
            },
            "url": {
              "raw": "{{api_url}}/projects/{{project_id}}/",
              "host": ["{{api_url}}"],
              "path": ["projects", "{{project_id}}", ""]
            }
          }
        },
        {
          "name": "Ajouter Contributeur",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user_id\": {{user_id}}\n}"
            },
            "url": {
              "raw": "{{api_url}}/projects/{{project_id}}/add-contributor/",
              "host": ["{{api_url}}"],
              "path": ["projects", "{{project_id}}", "add-contributor", ""]
            }
          }
        },
        {
          "name": "Liste Contributeurs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/projects/{{project_id}}/contributors/",
              "host": ["{{api_url}}"],
              "path": ["projects", "{{project_id}}", "contributors", ""]
            }
          }
        },
        {
          "name": "Supprimer Projet",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{api_url}}/projects/{{project_id}}/",
              "host": ["{{api_url}}"],
              "path": ["projects", "{{project_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üîí Tests de Permissions",
      "item": [
        {
          "name": "Acc√®s sans token (401)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/projects/",
              "host": ["{{api_url}}"],
              "path": ["projects", ""]
            }
          }
        },
        {
          "name": "Token invalide (401)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "invalid_token_test",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{api_url}}/users/profile/",
              "host": ["{{api_url}}"],
              "path": ["users", "profile", ""]
            }
          }
        }
      ]
    }
  ]
}
